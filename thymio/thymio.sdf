<sdf version='1.7'>
  <model name='thymio'>
    <link name='base_link'>
      <inertial>
        <pose>0.0243 0 0.0315 0 -0 0</pose>
        <mass>0.2</mass>
        <inertia>
          <ixx>0.0004398</ixx>
          <ixy>0</ixy>
          <ixz>-0.000152</ixz>
          <iyy>0.0005278</iyy>
          <iyz>0</iyz>
          <izz>0.0005052</izz>
        </inertia>
      </inertial>
      <collision name='base_link_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>0.8 1 1</scale>
            <uri>model://thymio/meshes/base_collision.dae</uri>
          </mesh>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode>
              <mu>0.1</mu>
              <mu2>0.1</mu2>
            </ode>
          </friction>
        </surface>
      </collision>
      <collision name='base_link_collision_1'>
        <pose>0.06 0 0.009 0 -0 0</pose>
        <geometry>
          <sphere>
            <radius>0.009</radius>
          </sphere>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode>
              <mu>0.1</mu>
              <mu2>0.1</mu2>
            </ode>
          </friction>
        </surface>
      </collision>
      <visual name='base_link_visual'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://thymio/meshes/base_simple.dae</uri>
          </mesh>
        </geometry>
      </visual>
      <self_collide>0</self_collide>
            
      <sensor name='ground_left_sensor' type='ray'>
        <visualize>1</visualize>
        <update_rate>10</update_rate>
        <always_on>1</always_on>
        <ray>
          <scan>
            <horizontal>
              <samples>1</samples>
              <resolution>1</resolution>
              <min_angle>0.0</min_angle>
              <max_angle>0.0</max_angle>
            </horizontal>
            <vertical>
              <samples>1</samples>
              <resolution>1</resolution>
              <min_angle>0.0</min_angle>
              <max_angle>0.0</max_angle>
            </vertical>
          </scan>
          <range>
            <min>0</min>
            <max>0.03</max>
            <resolution>0.005</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0</mean>
            <stddev>0.0025</stddev>
          </noise>
        </ray>
        <plugin name='ground_left_controller' filename='libgazebo_ros_ray_sensor.so'>
          <radiation_type>infrared</radiation_type>
          <ros>
            <namespace>my_namespace</namespace>
            <argument>~/out:=ground/left</argument>
          </ros>
          <output_type>sensor_msgs/Range</output_type>
        </plugin>
        <pose>0.07157 0.01155 0.009 3.14159 1.57079 -2.89848</pose>
        <frame name='ground_left_link'/>
      </sensor>

      <sensor name='ground_right_sensor' type='ray'>
        <visualize>1</visualize>
        <update_rate>10</update_rate>
        <always_on>1</always_on>
        <ray>
          <scan>
            <horizontal>
              <samples>1</samples>
              <resolution>1</resolution>
              <min_angle>0.0</min_angle>
              <max_angle>0.0</max_angle>
            </horizontal>
            <vertical>
              <samples>1</samples>
              <resolution>1</resolution>
              <min_angle>0.0</min_angle>
              <max_angle>0.0</max_angle>
            </vertical>
          </scan>
          <range>
            <min>0</min>
            <max>0.03</max>
            <resolution>0.005</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0</mean>
            <stddev>0.0025</stddev>
          </noise>
        </ray>
        <plugin name='ground_right_controller' filename='libgazebo_ros_ray_sensor.so'>
          <radiation_type>infrared</radiation_type>
          <ros>
            <namespace>my_namespace</namespace>
            <argument>~/out:=ground/right</argument>
          </ros>
          <output_type>sensor_msgs/Range</output_type>
        </plugin>
        <pose>0.07157 -0.01155 0.009 3.14159 1.57079 2.89848</pose>
        <frame name='ground_right_link'/>
      </sensor>
    </link>
    
    <link name='proximity_center_link'>
      <sensor name='proximity_center_sensor' type='ray'>
        <visualize>1</visualize>
        <update_rate>10</update_rate>
        <always_on>1</always_on>
        <ray>
          <scan>
            <horizontal>
              <samples>1</samples>
              <resolution>1</resolution>
              <min_angle>0.0</min_angle>
              <max_angle>0.0</max_angle>
            </horizontal>
            <vertical>
              <samples>1</samples>
              <resolution>1</resolution>
              <min_angle>0.0</min_angle>
              <max_angle>0.0</max_angle>
            </vertical>
          </scan>
          <range>
            <min>0</min>
            <max>0.12</max>
            <resolution>0.005</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0</mean>
            <stddev>0.0025</stddev>
          </noise>
        </ray>
        <plugin name='proximity_center_controller' filename='libgazebo_ros_ray_sensor.so'>
          <radiation_type>infrared</radiation_type>
          <ros>
            <namespace>my_namespace</namespace>
            <argument>~/out:=proximity/center</argument>
          </ros>
          <output_type>sensor_msgs/Range</output_type>
          <frame name='proximity_center_link'/>
        </plugin>
        <frame name='proximity_center_link'/>
        <pose>0.08 0 0.035 0 -0 0</pose>
      </sensor>
    </link>
      
    <link name='proximity_center_left_link'>
      <sensor name='proximity_center_left_sensor' type='ray'>
        <visualize>1</visualize>
        <update_rate>10</update_rate>
        <always_on>1</always_on>
        <ray>
          <scan>
            <horizontal>
              <samples>1</samples>
              <resolution>1</resolution>
              <min_angle>0.0</min_angle>
              <max_angle>0.0</max_angle>
            </horizontal>
            <vertical>
              <samples>1</samples>
              <resolution>1</resolution>
              <min_angle>0.0</min_angle>
              <max_angle>0.0</max_angle>
            </vertical>
          </scan>
          <range>
            <min>0</min>
            <max>0.12</max>
            <resolution>0.005</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0</mean>
            <stddev>0.0025</stddev>
          </noise>
        </ray>
        <plugin name='proximity_center_left_controller' filename='libgazebo_ros_ray_sensor.so'>
          <radiation_type>infrared</radiation_type>
          <ros>
            <namespace>my_namespace</namespace>
            <argument>~/out:=proximity/center_left</argument>
          </ros>
          <output_type>sensor_msgs/Range</output_type>
        </plugin>
        <pose>0.0756 0.0261 0.035 0 -0 0.33161</pose>
        <frame name='proximity_center_left_link'/>
      </sensor>
    </link>
      
    <link name='proximity_left_link'>
      <sensor name='proximity_left_sensor' type='ray'>
        <visualize>1</visualize>
        <update_rate>10</update_rate>
        <always_on>1</always_on>
        <ray>
          <scan>
            <horizontal>
              <samples>1</samples>
              <resolution>1</resolution>
              <min_angle>0.0</min_angle>
              <max_angle>0.0</max_angle>
            </horizontal>
            <vertical>
              <samples>1</samples>
              <resolution>1</resolution>
              <min_angle>0.0</min_angle>
              <max_angle>0.0</max_angle>
            </vertical>
          </scan>
          <range>
            <min>0</min>
            <max>0.12</max>
            <resolution>0.005</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0</mean>
            <stddev>0.0025</stddev>
          </noise>
        </ray>
        <plugin name='proximity_left_controller' filename='libgazebo_ros_ray_sensor.so'>
          <radiation_type>infrared</radiation_type>
          <ros>
            <namespace>my_namespace</namespace>
            <argument>~/out:=proximity/left</argument>
          </ros>
          <output_type>sensor_msgs/Range</output_type>
        </plugin>
        <pose>0.063 0.0493 0.035 0 -0 0.66323</pose>
        <frame name='proximity_left_link'/>
      </sensor>
    </link>
    
    <link name='proximity_rear_left_link'>
      <sensor name='proximity_rear_left_sensor' type='ray'>
        <visualize>1</visualize>
        <update_rate>10</update_rate>
        <always_on>1</always_on>
        <ray>
          <scan>
            <horizontal>
              <samples>1</samples>
              <resolution>1</resolution>
              <min_angle>0.0</min_angle>
              <max_angle>0.0</max_angle>
            </horizontal>
            <vertical>
              <samples>1</samples>
              <resolution>1</resolution>
              <min_angle>0.0</min_angle>
              <max_angle>0.0</max_angle>
            </vertical>
          </scan>
          <range>
            <min>0</min>
            <max>0.12</max>
            <resolution>0.005</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0</mean>
            <stddev>0.0025</stddev>
          </noise>
        </ray>
        <plugin name='proximity_rear_left_controller' filename='libgazebo_ros_ray_sensor.so'>
          <radiation_type>infrared</radiation_type>
          <ros>
            <namespace>my_namespace</namespace>
            <argument>~/out:=proximity/rear_left</argument>
          </ros>
          <output_type>sensor_msgs/Range</output_type>
        </plugin>
        <pose>-0.03 0.0305 0.035 0 -0 3.14159</pose>
        <frame name='proximity_rear_left_link'/>
      </sensor>
    </link>
    
    <link name='proximity_rear_right_link'>
      <sensor name='proximity_rear_right_sensor' type='ray'>
        <visualize>1</visualize>
        <update_rate>10</update_rate>
        <always_on>1</always_on>
        <ray>
          <scan>
            <horizontal>
              <samples>1</samples>
              <resolution>1</resolution>
              <min_angle>0.0</min_angle>
              <max_angle>0.0</max_angle>
            </horizontal>
            <vertical>
              <samples>1</samples>
              <resolution>1</resolution>
              <min_angle>0.0</min_angle>
              <max_angle>0.0</max_angle>
            </vertical>
          </scan>
          <range>
            <min>0</min>
            <max>0.12</max>
            <resolution>0.005</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0</mean>
            <stddev>0.0025</stddev>
          </noise>
        </ray>
        <plugin name='proximity_rear_right_controller' filename='libgazebo_ros_ray_sensor.so'>
          <radiation_type>infrared</radiation_type>
          <ros>
            <namespace>my_namespace</namespace>
            <argument>~/out:=proximity/rear_right</argument>
          </ros>
          <output_type>sensor_msgs/Range</output_type>
        </plugin>
        <pose>-0.03 -0.0305 0.035 0 -0 3.14159</pose>
        <frame name='proximity_rear_right_link'/>
      </sensor>
    </link>
    
    <link name='proximity_right_link'>
      <sensor name='proximity_right_sensor' type='ray'>
        <visualize>1</visualize>
        <update_rate>10</update_rate>
        <always_on>1</always_on>
        <ray>
          <scan>
            <horizontal>
              <samples>1</samples>
              <resolution>1</resolution>
              <min_angle>0.0</min_angle>
              <max_angle>0.0</max_angle>
            </horizontal>
            <vertical>
              <samples>1</samples>
              <resolution>1</resolution>
              <min_angle>0.0</min_angle>
              <max_angle>0.0</max_angle>
            </vertical>
          </scan>
          <range>
            <min>0</min>
            <max>0.12</max>
            <resolution>0.005</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0</mean>
            <stddev>0.0025</stddev>
          </noise>
        </ray>
        <plugin name='proximity_right_controller' filename='libgazebo_ros_ray_sensor.so'>
          <radiation_type>infrared</radiation_type>
          <ros>
            <namespace>my_namespace</namespace>
            <argument>~/out:=proximity/right</argument>
          </ros>
          <output_type>sensor_msgs/Range</output_type>
        </plugin>
        <pose>0.063 -0.0493 0.035 0 0 -0.66323</pose>
        <frame name='proximity_right_link'/>
      </sensor> 
    </link>
    
    <link name='proximity_center_right_link'>
      <sensor name='proximity_center_right_sensor' type='ray'>
        <visualize>1</visualize>
        <update_rate>10</update_rate>
        <always_on>1</always_on>
        <ray>
          <scan>
            <horizontal>
              <samples>1</samples>
              <resolution>1</resolution>
              <min_angle>0.0</min_angle>
              <max_angle>0.0</max_angle>
            </horizontal>
            <vertical>
              <samples>1</samples>
              <resolution>1</resolution>
              <min_angle>0.0</min_angle>
              <max_angle>0.0</max_angle>
            </vertical>
          </scan>
          <range>
            <min>0</min>
            <max>0.12</max>
            <resolution>0.005</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0</mean>
            <stddev>0.0025</stddev>
          </noise>
        </ray>
        <plugin name='proximity_center_right_controller' filename='libgazebo_ros_ray_sensor.so'>
          <radiation_type>infrared</radiation_type>
          <ros>
            <namespace>my_namespace</namespace>
            <argument>~/out:=proximity/center_right</argument>
          </ros>
          <output_type>sensor_msgs/Range</output_type>
        </plugin>
        <pose>0.0756 -0.0261 0.035 0 0 -0.33161</pose>
        <frame name='proximity_center_right_link'/>
      </sensor>
    </link>
    
    <joint name='left_wheel_joint' type='revolute'>
      <pose relative_to='base_link'>0 0.04675 0.022 0 -0 0</pose>
      <parent>base_link</parent>
      <child>left_wheel_link</child>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <effort>0</effort>
          <velocity>7.757</velocity>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <damping>0.1</damping>
          <friction>0.1</friction>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
      </axis>
    </joint>
    <link name='left_wheel_link'>
      <pose relative_to='left_wheel_joint'>0 0 0 0 -0 0</pose>
      <inertial>
        <pose>0 0 0 0 -0 0</pose>
        <mass>0.024</mass>
        <inertia>
          <ixx>3.354e-06</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>5.808e-06</iyy>
          <iyz>0</iyz>
          <izz>3.354e-06</izz>
        </inertia>
      </inertial>
      <collision name='left_wheel_link_collision'>
        <pose>0 0 0 1.5708 -0 0</pose>
        <geometry>
          <cylinder>
            <length>0.015</length>
            <radius>0.022</radius>
          </cylinder>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode>
              <mu>100</mu>
              <mu2>50</mu2>
            </ode>
          </friction>
        </surface>
      </collision>
      <visual name='left_wheel_link_visual'>
        <pose>0 0 0 1.5708 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://thymio/meshes/wheel.dae</uri>
          </mesh>
        </geometry>
      </visual>
    </link>
    <joint name='right_wheel_joint' type='revolute'>
      <pose relative_to='base_link'>0 -0.04675 0.022 0 -0 0</pose>
      <parent>base_link</parent>
      <child>right_wheel_link</child>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <effort>0</effort>
          <velocity>7.757</velocity>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <damping>0.1</damping>
          <friction>0.1</friction>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
      </axis>
    </joint>
    <link name='right_wheel_link'>
      <pose relative_to='right_wheel_joint'>0 0 0 0 -0 0</pose>
      <inertial>
        <pose>0 0 0 0 -0 0</pose>
        <mass>0.024</mass>
        <inertia>
          <ixx>3.354e-06</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>5.808e-06</iyy>
          <iyz>0</iyz>
          <izz>3.354e-06</izz>
        </inertia>
      </inertial>
      <collision name='right_wheel_link_collision'>
        <pose>0 0 0 1.5708 -0 0</pose>
        <geometry>
          <cylinder>
            <length>0.015</length>
            <radius>0.022</radius>
          </cylinder>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode>
              <mu>100</mu>
              <mu2>50</mu2>
            </ode>
          </friction>
        </surface>
      </collision>
      <visual name='right_wheel_link_visual'>
        <pose>0 0 0 -1.5708 0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://thymio/meshes/wheel.dae</uri>
          </mesh>
        </geometry>
      </visual>
    </link>
    <static>0</static>
    <plugin name='differential_drive_controller' filename='libgazebo_ros_diff_drive.so'>
      <odometry_source>0</odometry_source>
      <always_on>1</always_on>
      <update_rate>20.0</update_rate>
      <left_joint>left_wheel_joint</left_joint>
      <right_joint>right_wheel_joint</right_joint>
      <wheel_separation>0.0935</wheel_separation>
      <wheel_diameter>0.044</wheel_diameter>
      <max_wheel_torque>10.0</max_wheel_torque>
      <max_wheel_acceleration>0</max_wheel_acceleration>
      <publish_odom>1</publish_odom>
      <odometry_frame>odom</odometry_frame>
      <publish_wheel_tf>1</publish_wheel_tf>
      <publish_odom_tf>1</publish_odom_tf>
      <robot_base_frame>base_link</robot_base_frame>
      <namespace/>
    </plugin>
    <plugin name='joint_states' filename='libgazebo_ros_joint_state_publisher.so'>
      <joint_name>right_wheel_joint</joint_name>
      <joint_name>left_wheel_joint</joint_name>
      <update_rate>20.0</update_rate>
      <namespace/>
    </plugin>
  </model>
</sdf>
